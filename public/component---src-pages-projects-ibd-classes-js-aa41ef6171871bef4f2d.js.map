{"version":3,"sources":["webpack:///./src/pages/projects/ibd-classes.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/appStoreBadges/googlePlay.js","webpack:///./src/components/appStoreBadges/appleAppStore.js"],"names":["StyledContainer","styled","Container","IBDClasses","data","title","description","pathname","fluid","noGutters","xs","span","offset","to","className","icon","faWindowClose","size","md","images","nodes","map","image","i","key","childImageSharp","id","link","createHTML","url","this","StyledLink","div","props","href","target","rel","alt"],"mappings":"4PAcMA,EAAkBC,YAAOC,KAAV,mFAAGD,CAAH,2CAiGNE,UA3FI,WACjB,IAAMC,EAAI,OAeV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAM,cACNC,YAAa,kDACbC,SAAU,0BAEZ,kBAACP,EAAD,CAAiBQ,OAAK,GACpB,kBAAC,IAAD,CAAKC,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,KAC1B,kBAAC,OAAD,CAAMC,GAAI,aAAcC,UAAU,eAChC,kBAAC,IAAD,CAAiBC,KAAMC,IAAeC,KAAK,UAIjD,kBAAC,IAAD,CAAKR,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,wBAAIE,UAAU,UAAd,eACA,wBAAIA,UAAU,cAGlB,kBAAC,IAAD,CAAKL,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,gVASJ,kBAAC,IAAD,CAAKH,WAAS,GACXL,EAAKe,OAAOC,MAAMC,KAAI,SAACC,EAAOC,GAAR,OACrB,kBAAC,IAAD,CACEb,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBM,GAAU,IAANK,EAAU,CAAEZ,KAAM,EAAGC,OAAQ,GAAM,IACvCY,IAAKF,EAAMG,gBAAgBC,IAC3B,kBAAC,IAAD,CAAKlB,MAAOc,EAAMG,gBAAgBjB,MAAOM,UAAU,mBAIzD,kBAAC,IAAD,CAAKL,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,sEACA,4BACE,mFACA,+KAKA,+DAIN,kBAAC,IAAD,CAAKH,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,kBAAC,IAAD,CACEe,KACE,+EAIN,kBAAC,IAAD,CAAKjB,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,kBAAC,IAAD,CACEe,KAAM,iE,iCCpGpB,EAAQ,IAAR,CAA0B,QAAQ,SAAUC,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD,Q,gGCCnCE,EAAa9B,IAAO+B,IAAV,yEAAG/B,CAAH,2DAMD,aAAAgC,GAAU,IACfN,EAASM,EAATN,KACFvB,EAAI,OAaV,OACE,kBAAC2B,EAAD,KACE,uBACEG,KAAMP,EACNQ,OAAO,SACPC,IAAI,sBACJtB,UAAU,eACV,kBAAC,IAAD,CAAKN,MAAOJ,EAAKkB,MAAMG,gBAAgBjB,MAAO6B,IAAI,0B,qoCC5BpDN,EAAa9B,IAAO+B,IAAV,gFAAG/B,CAAH,2DAMD,aAAAgC,GAAU,IACfN,EAASM,EAATN,KACFvB,EAAI,OAaV,OACE,kBAAC2B,EAAD,KACE,uBACEG,KAAMP,EACNQ,OAAO,SACPC,IAAI,sBACJtB,UAAU,eACV,kBAAC,IAAD,CACEN,MAAOJ,EAAKkB,MAAMG,gBAAgBjB,MAClC6B,IAAI,8B","file":"component---src-pages-projects-ibd-classes-js-aa41ef6171871bef4f2d.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport '../../styles/bootstrap-4.3.1.min.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link } from 'gatsby-plugin-modal-routing';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport Layout from '../../components/layout/layout';\r\nimport SEO from '../../components/seo';\r\nimport GooglePlayBadge from '../../components/appStoreBadges/googlePlay';\r\nimport AppleAppStoreBadge from '../../components/appStoreBadges/appleAppStore';\r\n\r\nconst StyledContainer = styled(Container)`\r\n  padding: 0;\r\n  margin: 0;\r\n  text-align: center;\r\n`;\r\n\r\nconst IBDClasses = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query ibdClassesImages {\r\n      images: allFile(filter: { relativeDirectory: { eq: \"ibdclasses\" } }) {\r\n        nodes {\r\n          id\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title='IBD Classes'\r\n        description={'Information on my portfolio project IBD Classes'}\r\n        pathname={'/projects/ibd-classes'}\r\n      />\r\n      <StyledContainer fluid>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 1, offset: 11 }}>\r\n            <Link to={'/#projects'} className='noUnderline'>\r\n              <FontAwesomeIcon icon={faWindowClose} size='1x' />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 8, offset: 2 }}>\r\n            <h1 className='center'>IBD Classes</h1>\r\n            <hr className='hrTitle' />\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n            <p>\r\n              The IBD Classes app was developed on behalf of the Catherine\r\n              McEwan Foundation to assist clinicians in diagnosis paediatric\r\n              inflammatory bowel disease. The app will ask between 6 - 23\r\n              questions and based on the answers from the patient will present a\r\n              potential diagnosis based on the patient's symptoms.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          {data.images.nodes.map((image, i) => (\r\n            <Col\r\n              xs={{ span: 10, offset: 1 }}\r\n              md={i === 0 ? { span: 2, offset: 2 } : '2'}\r\n              key={image.childImageSharp.id}>\r\n              <Img fluid={image.childImageSharp.fluid} className='appImages' />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n            <p>My role on the development team was to:</p>\r\n            <ul>\r\n              <li>Design the user interface and experience of the app</li>\r\n              <li>\r\n                Implement the supplied diagnosis chart in the app to accept user\r\n                input and return a diagnosis based on their input for each of\r\n                the 23 questions\r\n              </li>\r\n              <li>Implement other app features</li>\r\n            </ul>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 3, offset: 2 }}>\r\n            <GooglePlayBadge\r\n              link={\r\n                'https://play.google.com/store/apps/details?id=uk.co.solus.health.PIBDCalc'\r\n              }\r\n            />\r\n          </Col>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 3, offset: 2 }}>\r\n            <AppleAppStoreBadge\r\n              link={'https://apps.apple.com/gb/app/ibd-classes/id1248829991'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </StyledContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IBDClasses;\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledLink = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default props => {\r\n  const { link } = props;\r\n  const data = useStaticQuery(graphql`\r\n    query googlePlayImage {\r\n      image: file(relativePath: { eq: \"google-play-badge.webp\" }) {\r\n        id\r\n        childImageSharp {\r\n          fluid(quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <StyledLink>\r\n      <a\r\n        href={link}\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        className='noUnderline'>\r\n        <Img fluid={data.image.childImageSharp.fluid} alt='Google Play Badge' />\r\n      </a>\r\n    </StyledLink>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledLink = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default props => {\r\n  const { link } = props;\r\n  const data = useStaticQuery(graphql`\r\n    query appleAppStoreImage {\r\n      image: file(relativePath: { eq: \"apple-app-store-badge.webp\" }) {\r\n        id\r\n        childImageSharp {\r\n          fluid(quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <StyledLink>\r\n      <a\r\n        href={link}\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        className='noUnderline'>\r\n        <Img\r\n          fluid={data.image.childImageSharp.fluid}\r\n          alt='Apple App Store Badge'\r\n        />\r\n      </a>\r\n    </StyledLink>\r\n  );\r\n};\r\n"],"sourceRoot":""}