{"version":3,"sources":["webpack:///./src/pages/projects/world-cup-manager.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/components/appStoreBadges/googlePlay.js"],"names":["StyledContainer","styled","Container","WorldCupManager","data","console","log","title","description","pathname","fluid","noGutters","xs","span","offset","to","className","icon","faWindowClose","size","md","images","nodes","slice","map","image","i","key","childImageSharp","id","alt","link","createHTML","url","this","StyledLink","div","props","href","target","rel"],"mappings":"oPAaMA,EAAkBC,YAAOC,KAAV,qFAAGD,CAAH,uFAwINE,UA7HS,WACtB,IAAMC,EAAI,OAoBV,OAFAC,QAAQC,IAAIF,GAGV,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEG,MAAM,oBACNC,YAAa,wDACbC,SAAU,gCAEZ,kBAACT,EAAD,CAAiBU,OAAK,GACpB,kBAAC,IAAD,CAAKC,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,KAC1B,kBAAC,OAAD,CAAMC,GAAI,aAAcC,UAAU,eAChC,kBAAC,IAAD,CAAiBC,KAAMC,IAAeC,KAAK,UAIjD,kBAAC,IAAD,CAAKR,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,iDACA,wBAAIE,UAAU,cAGlB,kBAAC,IAAD,CAAKL,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,qYAUJ,kBAAC,IAAD,CAAKH,WAAS,GACXP,EAAKiB,OAAOC,MAAMC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACjC,kBAAC,IAAD,CACEd,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBM,GAAU,IAANM,EAAU,CAAEb,KAAM,EAAGC,OAAQ,GAAM,IACvCa,IAAKF,EAAMG,gBAAgBC,IAC3B,kBAAC,IAAD,CAAKnB,MAAOe,EAAMG,gBAAgBlB,MAAOM,UAAU,mBAIzD,kBAAC,IAAD,CAAKL,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,ovBAgBJ,kBAAC,IAAD,CAAKH,WAAS,GACXP,EAAKiB,OAAOC,MAAMC,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACjC,kBAAC,IAAD,CACEd,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GACxBM,GAAU,IAANM,EAAU,CAAEb,KAAM,EAAGC,OAAQ,GAAM,IACvCa,IAAKF,EAAMG,gBAAgBC,IAC3B,kBAAC,IAAD,CACEnB,MAAOe,EAAMG,gBAAgBlB,MAC7BM,UAAU,YACVc,IAAKJ,SAKb,kBAAC,IAAD,CAAKf,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,wkBAaJ,kBAAC,IAAD,CAAKH,WAAS,GACZ,kBAAC,IAAD,CAAKC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKM,GAAI,CAAEP,KAAM,EAAGC,OAAQ,IACvD,kBAAC,IAAD,CACEiB,KACE,yM,iCCzIhB,EAAQ,IAAR,CAA0B,QAAQ,SAAUC,GAC1C,OAAO,SAAcC,GACnB,OAAOD,EAAWE,KAAM,IAAK,OAAQD,Q,gGCCnCE,EAAalC,IAAOmC,IAAV,yEAAGnC,CAAH,2DAMD,aAAAoC,GAAU,IACfN,EAASM,EAATN,KACF3B,EAAI,OAaV,OACE,kBAAC+B,EAAD,KACE,uBACEG,KAAMP,EACNQ,OAAO,SACPC,IAAI,sBACJxB,UAAU,eACV,kBAAC,IAAD,CAAKN,MAAON,EAAKqB,MAAMG,gBAAgBlB,MAAOoB,IAAI,0B","file":"component---src-pages-projects-world-cup-manager-js-ba6967ced88cb7c9d913.js","sourcesContent":["import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\nimport '../../styles/bootstrap-4.3.1.min.css';\r\nimport { Link } from 'gatsby-plugin-modal-routing';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\nimport Layout from '../../components/layout/layout';\r\nimport SEO from '../../components/seo';\r\nimport GooglePlayBadge from '../../components/appStoreBadges/googlePlay';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst StyledContainer = styled(Container)`\r\n  padding: 0;\r\n  margin: 0;\r\n  padding-bottom: 2rem;\r\n  text-align: center;\r\n\r\n  .appImages {\r\n    margin: 1rem;\r\n  }\r\n`;\r\n\r\nconst WorldCupManager = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query worldCupManagerImages {\r\n      images: allFile(\r\n        filter: { relativeDirectory: { eq: \"worldcupmanager\" } }\r\n      ) {\r\n        nodes {\r\n          id\r\n          childImageSharp {\r\n            fluid(quality: 100) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n              presentationWidth\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title='World Cup Manager'\r\n        description={'Information on my portfolio project World Cup Manager'}\r\n        pathname={'/projects/world-cup-manager'}\r\n      />\r\n      <StyledContainer fluid>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 1, offset: 11 }}>\r\n            <Link to={'/#projects'} className='noUnderline'>\r\n              <FontAwesomeIcon icon={faWindowClose} size='1x' />\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 8, offset: 2 }}>\r\n            <h1>World Cup Manager</h1>\r\n            <hr className='hrTitle' />\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n            <p>\r\n              World Cup manager was created as part of a three man team for our\r\n              computer project class, our brief was to create a piece of\r\n              software from a list as part of a random team of people that do\r\n              not know each other. My team decided to make a mobile application\r\n              that allowed people to save game outcomes about the world cup and\r\n              have it update tables and outcomes.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          {data.images.nodes.slice(0, 2).map((image, i) => (\r\n            <Col\r\n              xs={{ span: 12, offset: 0 }}\r\n              md={i === 0 ? { span: 4, offset: 2 } : '4'}\r\n              key={image.childImageSharp.id}>\r\n              <Img fluid={image.childImageSharp.fluid} className='appImages' />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n            <p>\r\n              The application displays the matches to be played in the\r\n              tournament and then takes in user input of score from each game.\r\n              Once the scores have been entered the application will update the\r\n              group stages by filling in the points, goals, goal difference and\r\n              other information to the group tables. After the group stage the\r\n              application displays the knockout stages and once again it takes a\r\n              score input and will graphically display which teams move on\r\n              further into the tournament. It can also be used to simulate made\r\n              up outcomes in a world cup situation and can also be used for\r\n              future tournaments as well. During the tournament the application\r\n              had over ten thousand downloads with our highest daily download\r\n              total hitting 250.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          {data.images.nodes.slice(2, 4).map((image, i) => (\r\n            <Col\r\n              xs={{ span: 12, offset: 0 }}\r\n              md={i === 0 ? { span: 4, offset: 2 } : '4'}\r\n              key={image.childImageSharp.id}>\r\n              <Img\r\n                fluid={image.childImageSharp.fluid}\r\n                className='appImages'\r\n                alt={i}\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 6, offset: 3 }}>\r\n            <p>\r\n              My role is the team was to get resources, compile minutes of\r\n              meetings and help with half of the documentation; my main task was\r\n              to create 75 of the 100 flags that could be used in a world cup\r\n              tournament as no good quality version of these flags were\r\n              available for download. I had a lot of fun designing and creating\r\n              the application as well as learning a lot making it, it was a\r\n              challenge at first to make such an application in a short period\r\n              of time with people I have never spoken to before but I feel the\r\n              outcome of the final product was fantastic.\r\n            </p>\r\n          </Col>\r\n        </Row>\r\n        <Row noGutters>\r\n          <Col xs={{ span: 10, offset: 1 }} md={{ span: 4, offset: 4 }}>\r\n            <GooglePlayBadge\r\n              link={\r\n                'https://play.google.com/store/apps/details?id=framework.core&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1'\r\n              }\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </StyledContainer>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default WorldCupManager;\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { graphql, useStaticQuery } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nconst StyledLink = styled.div`\r\n  margin-top: 1rem;\r\n  margin-bottom: 1rem;\r\n  text-align: center;\r\n`;\r\n\r\nexport default props => {\r\n  const { link } = props;\r\n  const data = useStaticQuery(graphql`\r\n    query googlePlayImage {\r\n      image: file(relativePath: { eq: \"google-play-badge.webp\" }) {\r\n        id\r\n        childImageSharp {\r\n          fluid(quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `);\r\n\r\n  return (\r\n    <StyledLink>\r\n      <a\r\n        href={link}\r\n        target='_blank'\r\n        rel='noopener noreferrer'\r\n        className='noUnderline'>\r\n        <Img fluid={data.image.childImageSharp.fluid} alt='Google Play Badge' />\r\n      </a>\r\n    </StyledLink>\r\n  );\r\n};\r\n"],"sourceRoot":""}